# Use SHA256-pinned Node.js Alpine image for deterministic builds
# To update: docker pull node:22-alpine && docker inspect node:22-alpine | grep -A1 RepoDigests
FROM node:22-alpine@sha256:41e4389f3d988d2ed55392df4db1420ad048ae53324a8e2b7c6d19508288107e AS builder

WORKDIR /app

# Create non-root user
RUN addgroup -g 1001 -S nodejs && adduser -S nodejs -u 1001

COPY package*.json ./

# Install dependencies and run security audit
RUN npm audit --audit-level=high && npm ci --no-audit

# Change ownership of app directory to nodejs user
RUN chown -R nodejs:nodejs /app
USER nodejs

COPY --chown=nodejs:nodejs . .

RUN npm run build

# Use SHA256-pinned Alpine image for deterministic final stage
# To update: docker pull alpine:3.19 && docker inspect alpine:3.19 | grep -A1 RepoDigests
FROM alpine:3.19@sha256:e5d0aea7f7d2954678a9a6269ca2d06e06591881161961ea59e974dff3f12377

# Create non-root user in final stage
RUN addgroup -g 1001 -S appuser && adduser -S appuser -u 1001

# Create dist directory with proper ownership
RUN mkdir -p /dist && chown -R appuser:appuser /dist

COPY --from=builder --chown=appuser:appuser /app/dist /dist

USER appuser

CMD ["ls", "-la", "/dist"]